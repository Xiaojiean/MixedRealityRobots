<launch>

  <!-- By default, not in debug mode -->
  <arg name="debug" default="false" />
  <arg name="rviz_setting" default="false" />
  <arg name="use_gui" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find panda_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world panda_link0" />

  <!-- The robot is simulated, therefore fake joint_states are used -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="$(arg use_gui)"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>
  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

  <!-- Given the published joint states, publish the tf tree for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run MoveGroup -->
  <include file="$(find panda_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz already set up -->
  <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_tutorial" value="$(arg rviz_setting)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- GDB Debug Option -->
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix"
     value="gdb -x $(find panda_moveit_config)/launch/gdb_settings.gdb --ex run --args" />
  
  <!-- follow_object_interface spawning -->
  <node name="follow_object_interface" pkg="panda_unity_simulation" type="follow_object_interface" respawn="false" launch-prefix="$(arg launch_prefix)" output="screen">
  </node>

  <!-- Launch the pose server -->
  <node name="pose_server2" pkg="panda_unity_simulation" type="pose_server2" />

</launch>
